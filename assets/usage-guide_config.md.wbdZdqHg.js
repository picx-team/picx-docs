import{_ as i,a as t,b as e,c as o,d as s,e as a,f as c,g as p,h as l,i as r,j as n,k as g}from"./chunks/img-17.ByufMq3p.js";import{_ as m,c as u,o as d,a3 as _}from"./chunks/framework.COm4hYgr.js";const h="/assets/img-11.CZufVsqH.png",b="/assets/img-1.HcC4hNaF.png",P="/assets/img-2.FmKdHXX0.png",k="/assets/img-3.CZXpSV14.png",f="/assets/img-4.DqOl9z_2.png",G="/assets/img-5.DGBsKh6N.png",H="/assets/img-6.ztW8VGAW.png",X="/assets/img-10.NxmDuJ2M.png",x="/assets/img-7.CVYDpguI.png",q="/assets/img-8.Du8_MRtx.png",A="/assets/img-9.COkBS81s.png",M=JSON.parse('{"title":"图床配置","description":"","frontmatter":{},"headers":[{"level":2,"title":"登录 PicX","slug":"登录-picx","link":"#登录-picx","children":[]},{"level":2,"title":"一键配置","slug":"一键配置","link":"#一键配置","children":[]},{"level":2,"title":"设置目录","slug":"设置目录","link":"#设置目录","children":[]},{"level":2,"title":"图片迁移","slug":"图片迁移","link":"#图片迁移","children":[]}],"relativePath":"usage-guide/config.md","filePath":"usage-guide/config.md","lastUpdated":1715137420000}'),v={name:"usage-guide/config.md"},T=_('<h1 id="图床配置" tabindex="-1">图床配置 <a class="header-anchor" href="#图床配置" aria-label="Permalink to &quot;图床配置&quot;">​</a></h1><p>PicX 图床服务功能基于 GitHub API 实现，你需要登录 GitHub 账号到 PicX 才能进行图床配置。</p><h2 id="登录-picx" tabindex="-1">登录 PicX <a class="header-anchor" href="#登录-picx" aria-label="Permalink to &quot;登录 PicX&quot;">​</a></h2><p>你可以使用 <strong><code>GitHub OAuth 授权登录</code></strong> 或 <strong><code>填写 GitHub Token 登录</code></strong> 这两种方式登录到 PicX。</p><p><img src="'+h+'" alt="image"></p><h3 id="github-oauth-授权登录" tabindex="-1">GitHub OAuth 授权登录 <a class="header-anchor" href="#github-oauth-授权登录" aria-label="Permalink to &quot;GitHub OAuth 授权登录&quot;">​</a></h3><p>在 PicX 登录页面按如下步骤即可完成 GitHub OAuth 授权登录：</p><ol><li><p>安装 PicX GitHub APP</p><p><strong>使用 GitHub OAuth 授权登录必须先在你的 GitHub 上安装 <a href="https://github.com/apps/picx-app" target="_blank" rel="noreferrer">PicX GitHub APP</a>，否则没有操作权限。</strong></p><p>如下图，在 PicX 登录页面点击 <strong><code>安装 PicX GitHub APP</code></strong> 立即跳转到 GitHub APP 安装页面：</p><p><img src="'+i+'" alt="image"></p><p><img src="'+t+'" alt="image"></p><p><img src="'+e+'" alt="image"></p><p>点击 <code>install</code> 进行安装，安装成功后会自动跳转回 PicX 登录页面，并进行是否授权登录的询问。</p><p><img src="'+o+'" alt="image"></p><div class="info custom-block"><p class="custom-block-title">提示</p><p>PicX GitHub APP 只需安装一次，之后的每一次授权登录都无需再安装。</p></div></li><li><p>进行 GitHub OAuth 授权登录</p><p>PicX GitHub APP 安装成功之后，你可以在消息提示框点击 <code>确定</code> 或者手动点击 <code>GitHub OAuth 授权登录</code> 按钮，进行授权登录。</p><p><img src="'+s+'" alt="image"></p><p><img src="'+a+'" alt="image"></p><p><img src="'+c+'" alt="image"></p><p><img src="'+p+'" alt="image"></p></li></ol><p>GitHub OAuth 授权登录成功之后，PicX 会自动完成该账号下的图床配置。</p><blockquote><p>GitHub OAuth 授权登录具有时效性，如果授权过期，重新授权登录即可。</p></blockquote><h3 id="填写-github-token-登录" tabindex="-1">填写 GitHub Token 登录 <a class="header-anchor" href="#填写-github-token-登录" aria-label="Permalink to &quot;填写 GitHub Token 登录&quot;">​</a></h3><p>PicX 基于 GitHub API 实现图片的上传、删除和管理等操作，除了 GitHub OAuth 授权登录之外，你还可以通过创建一个 GitHub Token 来获得 PicX 图床服务的操作权限。</p><ol><li><p>创建一个带有 <code>repo</code> 权限的 GitHub Token</p><blockquote><p>点击 <a href="https://github.com/settings/tokens/new" target="_blank" rel="noreferrer">https://github.com/settings/tokens/new</a> 快速新建 GitHub Token</p></blockquote><p><img src="'+l+'" alt="image"></p><p>点击 <strong><code>Generate token</code></strong> 按钮，生成 GitHub Token。</p><p><img src="'+r+'" alt="image"></p><p><img src="'+n+'" alt="image"></p><div class="warning custom-block"><p class="custom-block-title">注意</p><p><strong>新生成的 Token 只会显示一次，请妥善保存，如有遗失，重新生成即可。</strong></p></div></li><li><p>使用填写 GitHub Token 登录</p><p>在输入框填写 GitHub Token 后，点击 <strong><code>一键配置</code></strong> 便可以登录到 PicX，自动创建仓库并完成仓库、分支和目录之间的绑定。</p><p><img src="'+g+'" alt="image"></p><p><img src="'+b+'" alt="image"></p></li></ol><h2 id="一键配置" tabindex="-1">一键配置 <a class="header-anchor" href="#一键配置" aria-label="Permalink to &quot;一键配置&quot;">​</a></h2><p>只有完成了图床配置，才能进行图片上传。PicX 提供 <strong><code>一键配置</code></strong> 功能，自动创建仓库并完成仓库、分支和目录之间的绑定。</p><div class="info custom-block"><p class="custom-block-title">PicX 文档中的术语解释</p><ul><li>仓库 - 托管图片的图床</li><li>分支 - 仓库下的分支</li><li>目录 - 存放图片的文件夹</li></ul></div><p>一键配置自动创建：</p><ul><li>仓库 <code>picx-images-hosting</code></li><li>分支 <code>master</code></li></ul><div class="danger custom-block"><p class="custom-block-title">注意</p><ol><li><p>PicX 为进一步简化用户操作，自 <code>v3.0</code> 起，不再支持自由选择仓库和分支，统一使用 PicX 内设的仓库和分支名称。</p></li><li><p>如果你需要继续使用自定义的仓库和分支，请使用 <a href="https://v2.picx.xpoet.cn" target="_blank" rel="noreferrer">PicX v2.0</a> 。</p><blockquote><p><a href="https://v2.picx-docs.xpoet.cn" target="_blank" rel="noreferrer">PicX v2.0 文档</a></p></blockquote></li><li><p>你还可以使用 PicX 提供 <strong><a href="/usage-guide/config.html#图片迁移">图片迁移</a></strong> 功能，把原仓库图片一键复制到 PicX 内设的仓库。</p></li></ol></div><h2 id="设置目录" tabindex="-1">设置目录 <a class="header-anchor" href="#设置目录" aria-label="Permalink to &quot;设置目录&quot;">​</a></h2><p>在 PicX 中，目录是指仓库里存放图片的文件夹，上传图片之前，需绑定一个目录。</p><p><img src="'+P+'" alt="image"></p><ul><li><p>根目录：图片将存储在仓库根目录下。</p></li><li><p>日期目录：自动生成日期格式 <code>yyyyMMdd</code> 的目录名称，例如：<code>20240126</code>。</p><p><img src="'+k+'" alt="image"></p></li><li><p>仓库目录</p><p>如果你的仓库下存在多个目录，则会出现仓库目录选项，选择其中一个即可。</p><p><img src="'+f+'" alt="image"></p></li><li><p>新建目录：手动输入一个新目录，图片上传时会自动创建。</p><p><img src="'+G+'" alt="image"></p><blockquote><p>使用 <code>/</code> 可以创建多级目录，最大支持 5 级。<br> 例如：<code>x01/x02/x03</code>，表示创建到了 3 级目录。</p></blockquote></li></ul><h2 id="图片迁移" tabindex="-1">图片迁移 <a class="header-anchor" href="#图片迁移" aria-label="Permalink to &quot;图片迁移&quot;">​</a></h2><p>PicX 自 <code>v3.0</code> 起，做了一个很艰难的决定，为了进一步简化用户操作，不再支持自由选择仓库和分支。老用户可以通过 <strong>图片迁移</strong> 功能，把之前的图床仓库的图片一键复制到 PicX <code>v3.0</code> 内设的仓库里面，从而实现统一管理。</p><p>图片迁移的入口在 <code>图床配置</code> 页面和 <code>图床管理</code> 页面：</p><ul><li><p>图床配置页面</p><p><img src="'+H+'" alt="image"></p></li><li><p>图床管理页面</p><p><img src="'+X+'" alt="image"></p></li></ul><p>填写原仓库名称和分支名称，点击 <strong><code>确定</code></strong> 开始复制图片数据</p><p><img src="'+x+'" alt="image"></p><p><img src="'+q+'" alt="image"></p><p><img src="'+A+'" alt="image"></p>',31),O=[T];function C(D,S,V,N,I,$){return d(),u("div",null,O)}const w=m(v,[["render",C]]);export{M as __pageData,w as default};
